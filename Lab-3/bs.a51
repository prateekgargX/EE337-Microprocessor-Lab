ORG 0H
LJMP MAIN
ORG 100H
MAIN:
CALL SEARCH
HERE: SJMP HERE

ORG 130H
SEARCH:

MOV R0,30H //ADDRESS OF 0TH ELEMENT OF ARRAY
MOV R1,31H //VALUE OF N
MOV R2,32H //VALUE OF TARGET NUMBER

CALL EXEC_SEARCH
MOV 33H,R0 //SAVING THE VALUE TO SPECIFIED ADDRESS
RET

EXEC_SEARCH:
MOV A,R1 	 //LOAD VALUE OF N INTO A
JNZ NOT_ZERO //WILL JUMP TO NOT_ZERO IF A IS NOT 0
MOV R0,#0EH  //WILL BE EXECUTED IF A==0
RET

NOT_ZERO:
MOV B,#02H //TO BE USED FOR DIVISION
DIV AB 
MOV R1,A   //UPDATED VALUE OF N
DEC A 	   //POSITION WRT TO 0TH ELEMENT
ADD A,B	   //TO HANDLE CASES WHERE N IS ODD
ADD A,R0   //ADD ADDRESS OF 0TH ELEMENT
MOV R0,A   //ADDRESS OF MIDDLE ELEMENT
MOV A,R2   //MOVE THE TARGET VALUE INTO A
CLR C	   //CLEAR CARRY BECAUSE SUBB
SUBB A,@R0 //SUBTRACT VALUE OF MIDDLE ELEMENT FROM A
JC LOWER   //A IS LOWER IF C IS SET, SO JUMP TO LOWER SUBROUTINE
JNZ HIGHER //A IS NOT ZERO, SO JUMP TO HIGHER SUBROUTINE
RET		   //ELSE RETURN THE R0 VALUE

HIGHER:
INC R0           //INCREMENT THE ADDRESS
MOV 30H,R0		 //SHIFT THE ADDRESS OF UPPER SUB ARRAY TO MEMORY
CALL EXEC_SEARCH //CALL EXEC_SEARCH ON THIS SMALLER ARRAY
RET

LOWER:
MOV R0,30H       //RETRIEVE LAST ADDRESS
CALL EXEC_SEARCH //CALL EXEC_SEARCH ON THIS SMALLER ARRAY
RET

END